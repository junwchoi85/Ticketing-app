server:
  port: 8100
spring:
  application:
    name: users
  datasource:
    # url: jdbc:h2:file:~/users;AUTO_SERVER=true
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  sql:
    init:
      schema-locations:
      - classpath:schema.sql
      data-locations:
      - classpath:data.sql
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    function:
      destination: messageConsumer
    stream:
      bindings:
        userEvents-out-0: # Producer Binding.
          destination: users.event # Publishes messages to the Kafka topic
        messageConsumer-in-0:  # Consumer Binding.
          destination: messages.response # Consumes messages from the Kafka topic
          group: ${spring.application.name}
      kafka:
        binder:
          brokers:
            - localhost:9092
# Eureka
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
# Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
# Logging
logging:
  level:
    com:
      jc:
        users: DEBUG
  pattern:
    console: "%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n"
  
info:
  app:
    name: "users"
    description: "User Service"
    version: "0.0.1"